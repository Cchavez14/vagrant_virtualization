---
- name: Provision the database server
  hosts: db
  become: yes
  vars:
    ansible_python_interpreter: /usr/bin/python3
    db_root_password: "{{ db_root_password }}"
    db_name: "{{ db_name }}"
    app_host: "{{ app_host }}"
    db_user: "root"

  tasks:
    - name: Update the system
      apt:
        update_cache: yes

    - name: Install essential packages
      apt:
        name:
          - mysql-server
          - python3
          - python3-pip
          - python3-dev
          - default-libmysqlclient-dev
          - build-essential
          - pkg-config
          - libmysqlclient-dev
        state: present

    - name: Set MySQL bind address to allow external connections
      lineinfile:
        path: /etc/mysql/mysql.conf.d/mysqld.cnf
        regexp: "^bind-address"
        line: "bind-address = 0.0.0.0"
        state: present
        backup: yes

    - name: Install Python MySQL client
      pip:
        name:
          - mysqlclient

    - name: Ensure MySQL is running
      service:
        name: mysql
        state: started

    - name: Set MySQL root password
      mysql_user:
        name: root
        password: "{{ db_root_password }}"
        host: localhost
        state: present
        login_user: root
        login_password: "{{ db_root_password }}"
        login_unix_socket: /var/run/mysqld/mysqld.sock

    - name: Create database
      mysql_db:
        name: "{{ db_name }}"
        state: present
        login_user: root
        login_password: "{{ db_root_password }}"

    - name: Grant privileges to root user for FastAPI app
      mysql_user:
        name: "{{ db_user }}"
        host: "{{ app_host }}"
        password: "{{ db_root_password }}"
        priv: "*.*:ALL"
        state: present
        login_user: root
        login_password: "{{ db_root_password }}"
        login_unix_socket: /var/run/mysqld/mysqld.sock

    - name: Flush privileges
      mysql_query:
        login_user: root
        login_password: "{{ db_root_password }}"
        login_host: localhost
        query: FLUSH PRIVILEGES;

    - name: Load initial data from SQL file
      mysql_db:
        name: "{{ db_name }}"
        state: import
        target: /vagrant/init_data.sql
        login_user: root
        login_password: "{{ db_root_password }}"

    - name: Restart MySQL service to apply changes
      service:
        name: mysql
        state: restarted

- name: Provision the application server
  hosts: server
  become: yes
  vars:
    ansible_python_interpreter: /usr/bin/python3
    db_host: "{{ db_host }}"
    app_dir: "{{ app_dir }}"
    db_user: "root"
    db_password: "{{ db_root_password }}"
    db_database: "{{ db_name }}"

  tasks:
    - name: Update the system
      apt:
        update_cache: yes

    - name: Install essential packages
      apt:
        name:
          - python3
          - python3-pip
        state: present

    - name: Create application directory
      file:
        path: "{{ app_dir }}"
        state: directory
        mode: "0755"

    - name: Copy application code
      copy:
        src: ./app/
        dest: "{{ app_dir }}"

    - name: Install Python dependencies from requirements.txt
      pip:
        requirements: "{{ app_dir }}/requirements.txt"

    - name: Create .env file
      copy:
        dest: "{{ app_dir }}/.env"
        content: |
          DB_USER={{ db_user }}
          DB_PASSWORD={{ db_password }}
          DB_HOST={{ db_host }}
          DB_DATABASE={{ db_database }}

    - name: Create systemd service file for FastAPI
      copy:
        dest: /etc/systemd/system/fastapi.service
        content: |
          [Unit]
          Description=FastAPI Application
          After=network.target

          [Service]
          User=vagrant
          WorkingDirectory={{ app_dir }}
          ExecStart=/usr/local/bin/uvicorn main:app --host 0.0.0.0 --port 5500 --proxy-headers
          Restart=always

          [Install]
          WantedBy=multi-user.target

    - name: Reload systemd to recognize the new service
      command: systemctl daemon-reload

    - name: Enable FastAPI service to start on boot
      systemd:
        name: fastapi
        enabled: yes

    - name: Start FastAPI service
      systemd:
        name: fastapi
        state: started
